#!/bin/bash

# ============================================
#   build_apk.sh ‚Äî –º–æ–¥–µ—Ä–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∫–∏,
#   zipalign, –ø–æ–¥–ø–∏—Å–∏ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ APK, –∞ —Ç–∞–∫–∂–µ
#   –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≥–æ—Ç–æ–≤–æ–≥–æ bin/ –≤ ~/project
# ============================================
#
# –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:
#   ./build_apk.sh debug    ‚Äî —Å–æ–±–µ—Ä—ë—Ç debug-–≤–µ—Ä—Å–∏—é APK –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç –µ—ë –Ω–∞ –ø–æ–¥–∫–ª—é—á—ë–Ω–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
#   ./build_apk.sh release  ‚Äî —Å–æ–±–µ—Ä—ë—Ç release-–≤–µ—Ä—Å–∏—é, –≤—ã–ø–æ–ª–Ω–∏—Ç zipalign/apksigner,
#                           —É—Å—Ç–∞–Ω–æ–≤–∏—Ç release-APK –∏ —Å–∫–æ–ø–∏—Ä—É–µ—Ç bin/ ‚Üí ~/project
#   –ï—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî release.
#
# –í–∞–∂–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã:
# 1) –í buildozer.spec **—É–±–µ—Ä–∏—Ç–µ** (–∏–ª–∏ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ) —Å—Ç—Ä–æ–∫—É
#      android.release_signature = ...
#    –∏–Ω–∞—á–µ p4a –ø–æ–ø—ã—Ç–∞–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–∞—Ç—å APK —Å–∞–º, –∏ –≤–∞—à —Ä—É—á–Ω–æ–π apksigner-–ø—Ä–æ—Ü–µ—Å—Å –º–æ–∂–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞—Ç—å.
#
# 2) –í —à–∞–ø–∫–µ —ç—Ç–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ –∑–∞–¥–∞–π—Ç–µ –≤–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–ø–∏—Å–∏:
#      KEYSTORE_PATH   ‚Äî –ø—É—Ç—å –¥–æ –≤–∞—à–µ–≥–æ .jks-–∫–ª—é—á–∞
#      KEY_ALIAS       ‚Äî alias –≤–∞—à–µ–≥–æ –∫–ª—é—á–∞ –≤–Ω—É—Ç—Ä–∏ keystore
#      KEYSTORE_PASS   ‚Äî –ø–∞—Ä–æ–ª—å keystore
#      KEY_PASS        ‚Äî –ø–∞—Ä–æ–ª—å –∫–ª—é—á–∞ (–æ–±—ã—á–Ω–æ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å KEYSTORE_PASS)
#
# 3) –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Å–±–æ—Ä–∫–∏ –≤ –ø–∞–ø–∫–µ bin/ –ø–æ—è–≤—è—Ç—Å—è:
#      <APP_NAME>-<VERSION>-release-unsigned-<–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã>.apk   ‚Äî unsigned APK
#      <APP_NAME>-<VERSION>-release-aligned.apk                 ‚Äî –ø–æ—Å–ª–µ zipalign (–æ–±—ã—á–Ω–æ–µ)
#      <APP_NAME>-<VERSION>-release-signed.apk                  ‚Äî —Ñ–∏–Ω–∞–ª—å–Ω—ã–π, –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π APK
#      <APP_NAME>-<VERSION>-multiabi-release-aligned.apk        ‚Äî zipalign –¥–ª—è –º—É–ª—å—Ç–∏-ABI
#      <APP_NAME>-<VERSION>-multiabi-release-signed.apk         ‚Äî –º—É–ª—å—Ç–∏-ABI signed
#
# 4) –ó–∞—Ç–µ–º bin/ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–æ–ø–∏—Ä—É–µ—Ç—Å—è –≤ ~/project.
# 5) –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–¥–∫–ª—é—á—ë–Ω–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ (adb), —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –±—É–¥–µ—Ç –ø—Ä–æ–ø—É—â–µ–Ω–∞ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º.

set -euo pipefail

### === –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ === ###
# –ü—É—Ç—å –¥–æ –≤–∞—à–µ–≥–æ keystore-—Ñ–∞–π–ª–∞ (JKS)
KEYSTORE_PATH="$HOME/Lerdon/signkey.keystore"

# Alias –∫–ª—é—á–∞ –≤–Ω—É—Ç—Ä–∏ keystore
KEY_ALIAS="lerdon-release"

# –ü–∞—Ä–æ–ª—å —Å–∞–º–æ–≥–æ keystore
KEYSTORE_PASS="mypassword"

# –ü–∞—Ä–æ–ª—å –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ alias (–æ–±—ã—á–Ω–æ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å KEYSTORE_PASS)
KEY_PASS="mypassword"
### ============================ ###

# –ò–º—è –≤–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–¥–ª—è –ø–æ–∏—Å–∫–∞ .apk –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏)
APP_NAME="lerdon"

# –ò–º—è buildozer.spec (–µ—Å–ª–∏ –ª–µ–∂–∏—Ç —Ä—è–¥–æ–º —Å–æ —Å–∫—Ä–∏–ø—Ç–æ–º)
SPEC_FILE="buildozer.spec"

# –§–∞–π–ª –¥–ª—è –∑–∞–ø–∏—Å–∏ –ª–æ–≥–∞ buildozer
LOG_FILE="buildozer.log"

# –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–≤–æ–±–æ–¥–Ω—ã–π –æ–±—ä—ë–º –¥–∏—Å–∫–∞ (–ú–ë) –¥–ª—è —Å–±–æ—Ä–∫–∏
MIN_DISK_SPACE_MB=5120

# –ü—É—Ç–∏ –∫ Android SDK/NDK (Buildozer —Ö—Ä–∞–Ω–∏—Ç –≤—Å—ë –≤ ~/.buildozer/android)
export ANDROID_SDK_ROOT="$HOME/.buildozer/android/platform/android-sdk"
export ANDROIDSDK="$ANDROID_SDK_ROOT"
export ANDROIDNDK="$HOME/.buildozer/android/platform/android-ndk-r25b"
export ANDROIDAPI=33
export ANDROIDMINAPI=21

# JAVA_HOME (OpenJDK 17)
export JAVA_HOME="/usr/lib/jvm/java-17-openjdk-amd64"

# –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
export TZ=":/usr/share/zoneinfo/Etc/GMT-4"

# –§–∞–π–ª ZIP —Å NDK (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –ø–µ—Ä–µ–¥ —Å–±–æ—Ä–∫–æ–π)
NDK_ZIP="$HOME/.buildozer/android/platform/android-ndk-r25b-linux.zip"

# ============================================

# –§—É–Ω–∫—Ü–∏—è: –≤—ã–≤–µ—Å—Ç–∏ –æ—à–∏–±–∫—É + –ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞
error_exit() {
    echo -e "\n‚ùå –û—à–∏–±–∫–∞: $1" >&2
    echo "üìú –ü–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞ ($LOG_FILE):"
    if [ -f "$LOG_FILE" ]; then
        tail -n 50 "$LOG_FILE"
    fi
    exit 1
}

# –§—É–Ω–∫—Ü–∏—è: –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —à–∞–≥–æ–≤
_time_start=0
log_time() {
    if [ $_time_start -ne 0 ]; then
        local now=$(date +%s)
        local diff=$((now - _time_start))
        echo "‚è±Ô∏è –®–∞–≥ –∑–∞–≤–µ—Ä—à—ë–Ω –∑–∞ ${diff} —Å–µ–∫."
    fi
    _time_start=$(date +%s)
}

################################################################################
#                                  –ú—ç–π–Ω —Å–∫—Ä–∏–ø—Ç                                 #
################################################################################

echo "‚ú® –°–±–æ—Ä–∫–∞ Lerdon APK (—Å–µ–≥–æ–¥–Ω—è: $(date '+%Y-%m-%d %H:%M:%S'))"

# 1) –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º —Å–±–æ—Ä–∫–∏: debug –∏–ª–∏ release (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é release)
BUILD_MODE="release"
if [ $# -ge 1 ]; then
    case "$1" in
        debug|release)
            BUILD_MODE="$1"
            ;;
        *)
            echo "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç: '$1'. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'debug' –∏–ª–∏ 'release'."
            exit 1
            ;;
    esac
fi
echo "üîß –†–µ–∂–∏–º —Å–±–æ—Ä–∫–∏: $BUILD_MODE"
log_time

# 2) –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è buildozer
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–æ–º–∞–Ω–¥—ã buildozer..."
if ! command -v buildozer &> /dev/null; then
    error_exit "'buildozer' –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ: pip3 install buildozer"
fi
log_time

# 3) –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ
echo "üíæ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ..."
DISK_FREE=$(df -m . | awk 'NR==2 {print $4}')
if (( DISK_FREE < MIN_DISK_SPACE_MB )); then
    error_exit "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞. –¢—Ä–µ–±—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º ${MIN_DISK_SPACE_MB} –ú–ë, –¥–æ—Å—Ç—É–ø–Ω–æ: ${DISK_FREE} –ú–ë"
fi
log_time

# 4) –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ —Å–±–æ—Ä–∫–∏ (.buildozer)
echo "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ —Å–±–æ—Ä–∫–∏..."
mkdir -p "$HOME/.buildozer/android/platform"
rm -rf ./.buildozer
mkdir -p ./.buildozer
log_time

# 5) –ü—Ä–∏–Ω—è—Ç–∏–µ –ª–∏—Ü–µ–Ω–∑–∏–∏ Android SDK
echo "üìú –ü—Ä–∏–Ω–∏–º–∞–µ–º –ª–∏—Ü–µ–Ω–∑–∏—é Android SDK..."
SDK_LICENSE_DIR="$HOME/.buildozer/android/platform/android-sdk/licenses"
mkdir -p "$SDK_LICENSE_DIR"
echo "8933bad161af4178b1185d1a37fbf4f9829056a34" > "$SDK_LICENSE_DIR/android-sdk-license"
log_time

# 6) –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è NDK (ZIP-—Ñ–∞–π–ª–∞)
echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è NDK..."
if [ ! -f "$NDK_ZIP" ]; then
    error_exit "–§–∞–π–ª NDK –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: $NDK_ZIP"
else
    echo "‚úÖ –ù–∞–π–¥–µ–Ω NDK: $(basename "$NDK_ZIP")"
fi
log_time

# 7) –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ buildozer.spec
echo "‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ buildozer.spec..."
if [ ! -f "$SPEC_FILE" ]; then
    echo "üìù –§–∞–π–ª $SPEC_FILE –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π —á–µ—Ä–µ–∑ buildozer init..."
    buildozer init > "$LOG_FILE" 2>&1 || error_exit "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å $SPEC_FILE"
    echo "‚úÖ buildozer.spec —Å–æ–∑–¥–∞–Ω. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞."
    exit 0
else
    echo "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π $SPEC_FILE."
fi
log_time

# 8) –ê–≤—Ç–æ-–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç –≤–µ—Ä—Å–∏–∏ –≤ buildozer.spec (X.Y.Z ‚Üí X.Y.(Z+1))
echo "üîÑ –ê–≤—Ç–æ-–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç –≤–µ—Ä—Å–∏–∏ –≤ $SPEC_FILE..."
# –ò—â–µ–º —Å—Ç—Ä–æ–∫—É –≤–∏–¥–∞: version = 1.3.5 (–±–µ–∑ —É—á—ë—Ç–∞ –∫–∞–≤—ã—á–µ–∫)
CURRENT_VERSION_LINE=$(grep -E '^version\s*=\s*[0-9]+\.[0-9]+\.[0-9]+' "$SPEC_FILE" | head -n1)
if [ -z "$CURRENT_VERSION_LINE" ]; then
    echo "‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Å –≤–µ—Ä—Å–∏–µ–π –≤–∏–¥–∞ 'version = X.Y.Z'. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç."
else
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã: 1.3.5
    CURRENT_VERSION=$(echo "$CURRENT_VERSION_LINE" | sed -E 's/^version\s*=\s*([0-9]+\.[0-9]+\.[0-9]+).*/\1/')
    if [[ ! $CURRENT_VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
        echo "‚ö†Ô∏è –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è '$CURRENT_VERSION' –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É X.Y.Z. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç."
    else
        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
        NEW_VERSION=$(echo "$CURRENT_VERSION" | awk -F. '{$NF = $NF + 1}1' OFS='.')
        # –ó–∞–º–µ–Ω—è–µ–º –≤—Å—é —Å—Ç—Ä–æ–∫—É version = ... –Ω–∞ –Ω–æ–≤—É—é
        sed -i -E "s/^version\s*=\s*[0-9]+\.[0-9]+\.[0-9]+/version = $NEW_VERSION/" "$SPEC_FILE" \
            || error_exit "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–º–µ–Ω–∏—Ç—å –≤–µ—Ä—Å–∏—é –≤ $SPEC_FILE"
        echo "üÜï –í–µ—Ä—Å–∏—è: $CURRENT_VERSION ‚Üí $NEW_VERSION"
    fi
fi
log_time

# 9) –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ python-–≤–µ—Ä—Å–∏–∏, p4a.bootstrap –∏ android.archs –≤ buildozer.spec
echo "üîß –û–±–Ω–æ–≤–ª—è–µ–º python-–≤–µ—Ä—Å–∏—é, p4a.whitelist –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –≤ $SPEC_FILE..."

# ‚Äî –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python 3.11.0 (–∏–ª–∏ –¥—Ä—É–≥—É—é –≤–µ—Ä—Å–∏—é, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
WANTED_PYTHON="3.11.0"
if grep -q -E '^[[:space:]]*p4a\.python_version\s*=' "$SPEC_FILE"; then
    sed -i -E "s|^[[:space:]]*p4a\.python_version.*|p4a.python_version = ${WANTED_PYTHON}|" "$SPEC_FILE" \
        || error_exit "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å p4a.python_version –≤ $SPEC_FILE"
    echo "‚úÖ p4a.python_version ‚Üí $WANTED_PYTHON"
else
    echo "p4a.python_version = ${WANTED_PYTHON}" >> "$SPEC_FILE"
    echo "‚úÖ –î–æ–±–∞–≤–∏–ª–∏ p4a.python_version = $WANTED_PYTHON"
fi

# ‚Äî –û–±–Ω–æ–≤–ª—è–µ–º p4a.whitelist –Ω–∞ python3.11.0
if grep -q -E '^[[:space:]]*p4a\.whitelist\s*=' "$SPEC_FILE"; then
    sed -i -E "s|^[[:space:]]*p4a\.whitelist.*|p4a.whitelist = python${WANTED_PYTHON}|" "$SPEC_FILE" \
        || error_exit "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å p4a.whitelist –≤ $SPEC_FILE"
    echo "‚úÖ p4a.whitelist ‚Üí python$WANTED_PYTHON"
else
    echo "p4a.whitelist = python${WANTED_PYTHON}" >> "$SPEC_FILE"
    echo "‚úÖ –î–æ–±–∞–≤–∏–ª–∏ p4a.whitelist = python$WANTED_PYTHON"
fi

# ‚Äî –ó–∞–¥–∞—ë–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã (armeabi-v7a –∏ arm64-v8a –¥–ª—è —Ä–µ–ª–∏–∑–Ω–æ–π —Å–±–æ—Ä–∫–∏, —Ç–æ–ª—å–∫–æ armeabi-v7a –¥–ª—è debug)
if [ "$BUILD_MODE" = "debug" ]; then
    NEW_ARCHS="armeabi-v7a"
    echo "üîß DEBUG ‚Üí —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º android.archs = $NEW_ARCHS"
else
    NEW_ARCHS="arm64-v8a, armeabi-v7a"
    echo "üîß RELEASE ‚Üí —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º android.archs = $NEW_ARCHS"
fi

if grep -q -E '^[[:space:]]*android\.archs\s*=' "$SPEC_FILE"; then
    # –∑–∞–º–µ–Ω—è–µ–º –≤—Å—é —Å—Ç—Ä–æ–∫—É, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –æ—Ç—Å—Ç—É–ø–æ–≤
    sed -i -E "s|^[[:space:]]*android\.archs.*|android.archs = ${NEW_ARCHS}|" "$SPEC_FILE" \
        || error_exit "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å android.archs –≤ $SPEC_FILE"
    echo "‚úÖ –ó–∞–º–µ–Ω–∏–ª–∏ android.archs –Ω–∞: $NEW_ARCHS"
else
    # –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∏ –Ω–µ—Ç, –ø—Ä–æ—Å—Ç–æ –¥–æ–ø–∏—Å—ã–≤–∞–µ–º –≤ –∫–æ–Ω–µ—Ü
    echo "android.archs = $NEW_ARCHS" >> "$SPEC_FILE"
    echo "‚úÖ –î–æ–±–∞–≤–∏–ª–∏ android.archs = $NEW_ARCHS"
fi

log_time


# 10) –ó–∞–ø—É—Å–∫ buildozer
echo "üì¶ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É ($BUILD_MODE) —á–µ—Ä–µ–∑ buildozer..."
START_BUILD_TIME=$(date +%s)

if [ "$BUILD_MODE" = "debug" ]; then
    buildozer -v android debug > "$LOG_FILE" 2>&1
    BUILD_EXIT_CODE=$?
else
    # –î–ª—è —Ä–µ–ª–∏–∑–Ω–æ–π —Å–±–æ—Ä–∫–∏ –±–µ–∑ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –ø–æ–¥–ø–∏—Å–∏ (–±—É–¥–µ–º –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å –≤—Ä—É—á–Ω—É—é)
    buildozer -v android release > "$LOG_FILE" 2>&1
    BUILD_EXIT_CODE=$?
fi

BUILD_DURATION=$(( $(date +%s) - START_BUILD_TIME ))
echo "‚è±Ô∏è –°–±–æ—Ä–∫–∞ ($BUILD_MODE) –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∑–∞ ${BUILD_DURATION} —Å–µ–∫."

# 11) –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ —Å–±–æ—Ä–∫–∏
if [ $BUILD_EXIT_CODE -ne 0 ]; then
    error_exit "–°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π (–∫–æ–¥: $BUILD_EXIT_CODE)."
fi

APK_DIR="bin"

# –ü–µ—Ä–µ–∏–∑–≤–ª–µ–∫–∞–µ–º —Å—Ç—Ä–æ–∫—É —Å –≤–µ—Ä—Å–∏–µ–π, –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –µ—ë –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–ª–∏
VERSION_STR=$(grep -E '^version\s*=\s*[0-9]+\.[0-9]+\.[0-9]+' "$SPEC_FILE" | head -n1 | sed -E 's/^version\s*=\s*([0-9]+\.[0-9]+\.[0-9]+).*/\1/')

APK_BASENAME="${APP_NAME}-${VERSION_STR}"

if [ "$BUILD_MODE" = "debug" ]; then
    # debug: buildozer —Å–∞–º —Å–æ–∑–¥–∞—Å—Ç <app>-<version>-debug.apk
    APK_FILENAME="${APK_BASENAME}-debug.apk"
    APK_PATH="${APK_DIR}/${APK_FILENAME}"
    if [ -f "$APK_PATH" ]; then
        echo "‚úÖ Debug-APK –≥–æ—Ç–æ–≤: $APK_PATH"
        # –ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞ –ø–æ–¥–∫–ª—é—á—ë–Ω–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
        if command -v adb &> /dev/null; then
            echo "üì≤ –ü—ã—Ç–∞–µ–º—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å debug-APK —á–µ—Ä–µ–∑ adb..."
            if adb devices | grep -w "device" &> /dev/null; then
                adb install -r "$APK_PATH" && echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ debug-APK –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ."
            else
                echo "‚ö†Ô∏è –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ adb. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É."
            fi
        else
            echo "‚ö†Ô∏è adb –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É."
        fi
        exit 0
    else
        error_exit "Debug-APK –Ω–µ –Ω–∞–π–¥–µ–Ω: $APK_PATH"
    fi
else
    ################################################################################
    # 12) –ù–∞—Ö–æ–¥–∏–º –æ–±—ã—á–Ω—ã–π unsigned-APK, –≤—ã–ø–æ–ª–Ω—è–µ–º zipalign –∏ –ø–æ–¥–ø–∏—Å—å –¥–ª—è –Ω–µ–≥–æ       #
    ################################################################################
    UNSIGNED_APK=$(ls "${APK_DIR}/${APK_BASENAME}-release-unsigned"*".apk" 2>/dev/null | head -n1)
    if [ -z "$UNSIGNED_APK" ] || [ ! -f "$UNSIGNED_APK" ]; then
        error_exit "Unsigned-APK –Ω–µ –Ω–∞–π–¥–µ–Ω: ${APK_DIR}/${APK_BASENAME}-release-unsigned*.apk"
    fi

    # 12.1) Zipalign –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ APK
    ALIGNED_APK="${UNSIGNED_APK%.apk}-aligned.apk"
    echo "üîß –ó–∞–ø—É—Å–∫–∞–µ–º zipalign (–æ–±—ã—á–Ω—ã–π unsigned ‚Üí aligned)..."
    "$ANDROID_SDK_ROOT/build-tools/36.0.0/zipalign" -v -p 4 \
        "$UNSIGNED_APK" \
        "$ALIGNED_APK" \
        || error_exit "zipalign (–æ–±—ã—á–Ω—ã–π) –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π."

    # 12.2) Apksigner –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ APK
    SIGNED_APK="${UNSIGNED_APK%.apk}-signed.apk"
    echo "üîß –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º –æ–±—ã—á–Ω—ã–π APK —á–µ—Ä–µ–∑ apksigner..."
    "$ANDROID_SDK_ROOT/build-tools/36.0.0/apksigner" sign \
        --ks "$KEYSTORE_PATH" \
        --ks-key-alias "$KEY_ALIAS" \
        --ks-pass "pass:$KEYSTORE_PASS" \
        --key-pass "pass:$KEY_PASS" \
        --out "$SIGNED_APK" \
        "$ALIGNED_APK" \
        || error_exit "apksigner (–æ–±—ã—á–Ω—ã–π) –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π."

    # 12.3) –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å—å (–æ–±—ã—á–Ω—ã–π APK)
    echo "üîé –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å—å –æ–±—ã—á–Ω–æ–≥–æ APK..."
    "$ANDROID_SDK_ROOT/build-tools/36.0.0/apksigner" verify --print-certs "$SIGNED_APK" \
        || error_exit "apksigner verify (–æ–±—ã—á–Ω—ã–π) –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É."

    echo "‚úÖ –û–±—ã—á–Ω—ã–π Release-APK –≥–æ—Ç–æ–≤ –∏ –ø–æ–¥–ø–∏—Å–∞–Ω: $SIGNED_APK"

    ################################################################################
    # 13) Zipalign –∏ apksigner –¥–ª—è –º—É–ª—å—Ç–∏-ABI unsigned-APK                          #
    ################################################################################
    echo "üîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —à–∞–≥: Zipalign + Apksigner –¥–ª—è –º—É–ª—å—Ç–∏-ABI unsigned-APK"

    cd ~/Lerdon/bin || error_exit "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –≤ –ø–∞–ø–∫—É ~/Lerdon/bin"

    ANDROID_BUILD_TOOLS="$HOME/.buildozer/android/platform/android-sdk/build-tools/36.0.0"

    # –ò—Å—Ö–æ–¥–Ω–æ–µ –∏–º—è unsigned-–º—É–ª—å—Ç–∏-ABI APK (—Å—Ç—Ä–æ–∏–º –ø–æ —à–∞–±–ª–æ–Ω—É):
    MULTI_UNSIGNED="${APP_NAME}-${VERSION_STR}-arm64-v8a_armeabi-v7a_x86_x86_64-release-unsigned.apk"
    if [ ! -f "$MULTI_UNSIGNED" ]; then
        echo "‚ö†Ô∏è –ú—É–ª—å—Ç–∏-ABI unsigned-APK –Ω–µ –Ω–∞–π–¥–µ–Ω: $MULTI_UNSIGNED"
    else
        # 13.1) Zipalign –º—É–ª—å—Ç–∏-ABI unsigned ‚Üí multiabi-aligned
        MULTI_ALIGNED="${APP_NAME}-${VERSION_STR}-multiabi-release-aligned.apk"
        echo "üîß zipalign –¥–ª—è –º—É–ª—å—Ç–∏-ABI unsigned ‚Üí $MULTI_ALIGNED"
        "$ANDROID_BUILD_TOOLS/zipalign" -v -p 4 \
            "$MULTI_UNSIGNED" \
            "$MULTI_ALIGNED" \
            || error_exit "zipalign (–º—É–ª—å—Ç–∏-ABI) –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π."

        # 13.2) Apksigner –¥–ª—è –º—É–ª—å—Ç–∏-ABI aligned ‚Üí multiabi-signed
        MULTI_SIGNED="${APP_NAME}-${VERSION_STR}-multiabi-release-signed.apk"
        echo "üîß apksigner –¥–ª—è –º—É–ª—å—Ç–∏-ABI aligned ‚Üí $MULTI_SIGNED"
        "$ANDROID_BUILD_TOOLS/apksigner" sign \
            --ks ../signkey.keystore \
            --ks-key-alias "$KEY_ALIAS" \
            --ks-pass "pass:$KEYSTORE_PASS" \
            --key-pass "pass:$KEY_PASS" \
            --out "$MULTI_SIGNED" \
            "$MULTI_ALIGNED" \
            || error_exit "apksigner (–º—É–ª—å—Ç–∏-ABI) –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π."

        echo "‚úÖ –ú—É–ª—å—Ç–∏-ABI Release-APK –≥–æ—Ç–æ–≤ –∏ –ø–æ–¥–ø–∏—Å–∞–Ω: $MULTI_SIGNED"
    fi

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
    cd - > /dev/null
    ################################################################################
    # 14) –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–¥–ø–∏—Å–∞–Ω–Ω–æ–≥–æ release-APK –∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ bin/ ‚Üí ~/project         #
    ################################################################################
    # –ü—ã—Ç–∞–µ–º—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–±—ã—á–Ω—ã–π signed APK (–Ω–µ multi-ABI)
    if command -v adb &> /dev/null; then
        echo "üì≤ –ü—ã—Ç–∞–µ–º—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å release-APK —á–µ—Ä–µ–∑ adb..."
        if adb devices | grep -w "device" &> /dev/null; then
            adb install -r "$SIGNED_APK" && echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ release-APK –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ."
        else
            echo "‚ö†Ô∏è –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ adb. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É."
        fi
    else
        echo "‚ö†Ô∏è adb –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É."
    fi

    echo "üìÇ –ö–æ–ø–∏—Ä—É–µ–º bin/ ‚Üí ~/project"
    cp -rf bin ~/project || echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å bin/ –≤ ~/project"
    echo "‚úÖ –ì–æ—Ç–æ–≤–æ! –í–µ—Å—å bin/ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ ~/project"

    exit 0
fi