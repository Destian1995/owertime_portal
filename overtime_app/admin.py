from django.contrib import adminfrom overtime_app.models import Holiday, Employee, OvertimeRequest, ApprovalLog, Position # Убедитесь, что Position импортирован, если он все еще используется где-то@admin.register(Position)class PositionAdmin(admin.ModelAdmin):    list_display = ['name']@admin.register(Holiday)class HolidayAdmin(admin.ModelAdmin):    list_display = ['date', 'is_holiday']@admin.register(Employee)class EmployeeAdmin(admin.ModelAdmin):    # Убираем 'position' и 'is_manager', добавляем 'job_title_manual' и 'role_type'    list_display = ['full_name', 'department', 'job_title_manual', 'role_type', 'email'] # is_manager можно оставить, если оно полезно, но теперь оно основано на role_type    list_filter = ['department', 'role_type'] # Убираем 'position' из фильтров    # Опционально: добавьте search_fields для удобства поиска    search_fields = ['full_name', 'email', 'job_title_manual']@admin.register(OvertimeRequest)class OvertimeRequestAdmin(admin.ModelAdmin):    list_display = ['id', 'employee', 'start_datetime', 'end_datetime', 'hours', 'status', 'reason']    # list_filter: можно оставить employee, так как он ссылается на Employee, а не на Position напрямую    list_filter = ['status', 'reason', 'employee__department', 'employee'] # Пример с фильтром по подразделению сотрудника    # Опционально: добавьте search_fields    search_fields = ['employee__full_name', 'justification']@admin.register(ApprovalLog)class ApprovalLogAdmin(admin.ModelAdmin):    list_display = ['request', 'approver', 'decision', 'timestamp']    # Опционально: добавьте search_fields и list_filter    search_fields = ['request__id', 'approver__full_name']    list_filter = ['decision', 'timestamp']